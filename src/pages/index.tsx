import Head from "next/head";
import { Geist, Geist_Mono } from "next/font/google";
import styles from "@/styles/Home.module.scss";
import Products from "@/components/Products";
import { GetServerSideProps } from "next";
import { getProducts } from "@/services";
import { ProductItem } from "@/types";
import Page from "@/components/Page";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

type Props = {
  initialItems: ProductItem[];
}

export default function Home({ initialItems }: Props) {
  return (
    <>
      <Head>
        <title>Product Web</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <Page>
          <h1 className={styles.title}>Our Products</h1>
          <Products products={initialItems} />
        </Page>
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const query = context.query.q || ''; // Get the query string (if any)
  const sort = context.query.s || ''; // Get the query string (if any)

  try {
    const initialItems = await getProducts({ q: query as string, sort: sort as string });

    return {
      props: {
        initialItems,
      },
    };
  } catch {
    return {
      props: {
        initialItems: [],
      },
    };
  }
};
